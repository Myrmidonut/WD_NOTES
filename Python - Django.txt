INSTALL:
  pip3 install django
---------------------------------------------------------------------------------------------------
OVERVIEW:
  one project with multiple apps

  main urls.py connects urls and urls.py in apps
  app urls.py connects functions in views.py
---------------------------------------------------------------------------------------------------
WORKFLOW:
  create project
    create template
    create project urls
    adjust settings

  create app
    create view
    create template
    create app urls
    create model

  make migration
  migrate
---------------------------------------------------------------------------------------------------
SERVER:
  python3 manage.py runserver           run server at localhost:8000
---------------------------------------------------------------------------------------------------
PROJECT:
  a project contains multiple apps
  --------------------
  create:
    django-admin startproject mysite     
  --------------------
  files and folders:
    manage.py                           cli for interaction
    mysite/                             project files
      __init__.py                       indicates the folder as a python package
      settings.py                       project settings
      urls.py                           project URLs
      wsgi.py                           server entry point
---------------------------------------------------------------------------------------------------
APPS:
  apps are selfcontained python packages
  --------------------
  create:
    python3 manage.py startapp myapp    create app inside project folder
  --------------------
  files and folders:
    __init__.py                         indicates paython package
    admin.py                            admin panel
    apps.py                             settings
    migrations/                         migrations
      __init__.py
    models.py                           models
    tests.py                            tests
    views.py                            views
---------------------------------------------------------------------------------------------------
VIEWS:
  response:
    myapp/views.py:
      from django.http import HttpResponse

      def index(request):
        return HttpResponse("Hello world.")             response text
  --------------------
  render:
    myapp/templates/index.html                          template

    myapp/views.py:
      from django.http import HttpResponse

      def index(request):
        data = ...
        return render(request, "index.html", data)      render template
  --------------------
  database:
    myapp/views.py:
      from .models import MyModel
  
      def index(request):
        data = MyModel.objects.all()                    all entries
               MyModel.objects.filter()                 filtered entries
               MyModel.objects.get()                    single entry
               MyModel.objects.save()                   create new or update entry
---------------------------------------------------------------------------------------------------
TEMPLATES:
  can receive data from view
  --------------------
  files:
    templates/base.html                           project template page

    myapp/templates/myapp/index.html              app template page
  --------------------
  settings.py:
    TEMPLATES = [
      {
        'DIRS': [
          os.path.join(BASE_DIR, "templates")     project templates path
        ]
      }
    ]
  --------------------
  template tag:
    {% ... %}                                     code
    {{ ... }}                                     display data
  --------------------
  content blocks:
    base.html:
      ...
      {% block content %}                         render code inside the block
      {% endblock %}
      ...

    index.html:
      {% extends "base.html" %}                   add code to main template file

      {% block content %}                         content block
        ...
      {% endblock %}
  --------------------
  loop:
    <ul>
      {% for product in products %}
        <li>{{ product.name }}</li>
      {% endfor %}
    </ul>
---------------------------------------------------------------------------------------------------
URLS:
  connect a view to a URL with a URLconf
  --------------------
  myapp/urls.py:                                  app URLconf
    from django.urls import path
    from . import views

    urlpatterns = [
      path("", views.index, name="index")
    ]
  --------------------
  mysite/urls.py:                                 root URLconf
    from django.contrib import admin
    from django.urls import path, include

    urlpatterns = [
      path("admin/", admin.site.urls),
      path("myapp/", include("myapp.urls"))       link to app URLconf
    ]
---------------------------------------------------------------------------------------------------
MODEL:
  SQLite by default
  --------------------
  migration:
    build migration from models:
      python3 manage.py makemigrations myapp

    migrate:
      python3 manage.py migrate

    id field is added automatically
  --------------------
  model:
    myapp/models.py:                                      app
      from django.db import models

      class MyModel(models.Model):                        model
        name = models.CharField(max_length=255)
        price = models.FloatField()
        stock = models.IntegerField()
        image_url = models.CharField(max_length=2083)

    mysite/settings.py:                                   project
      INSTALLED_APPS = [
        ...,
        "myapp.apps.MyappConfig"                          enable app
      ]

    fields:
      CharField(max_length=255)
      FloatField()
      IntegerField()
      ForeignKey(..., on_delete=models.CASCADE, null=True)
      DateField()
      BooleanField()

      default=False
      null=True
---------------------------------------------------------------------------------------------------
SHELL:
  python3 manage.py shell
---------------------------------------------------------------------------------------------------
ADMIN:
  create admin user:
    python3 manage.py createsuperuser
  --------------------
  open admin panel:
    access site using /admin
  --------------------
  add models to admin panel:
    myapp/admin.py:                                       app specific
      from .models import MyModel                         import model

      admin.site.register(MyModel)                        register model with admin
  --------------------
  change display in admin panel:
    myapp/admin.py:
      class MyAppAdmin(admin.ModelAdmin):
        list_display = ("name", "price", "stock")         show these columns

      admin.site.register(MyApp, MyAppAdmin)              register model with options with admin
---------------------------------------------------------------------------------------------------
