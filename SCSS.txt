SCSS:
  new
  valid with CSS
  .scss file
--------------------
SASS:
  old
  uses indentation
  .sass files
---------------------------------------------------------------------------------------------------
INSTALLATION:
  npm install -g sass
---------------------------------------------------------------------------------------------------
COMPILING:
  sass main.scss main.css           input output
  sass --watch main.scss main.css   rebuild on change
---------------------------------------------------------------------------------------------------
PARTIALS:
  files start with _            create modular stylesheets

  @import "partial";            imports _partial.scss
---------------------------------------------------------------------------------------------------
EXTENDING:
  ... {                         add rules from another selector
    @extend ...;
  }
---------------------------------------------------------------------------------------------------
PLACEHOLDER:
  %... {                        only printed if used with @extend
    ...;
  }
---------------------------------------------------------------------------------------------------
COMMENTS:
  // ...                        single line

  /*                            multiple lines
    ...
  */
---------------------------------------------------------------------------------------------------
NESTING SELECTORS:
  .parent {                     CSS: .parent .child {...}
    ...;
    .child {
      ...;
    }
    &:hover {
      ...;
    }
  }
---------------------------------------------------------------------------------------------------
NESTING PROPERTIES:
  font: {                       CSS: font-size:, font-decoration:
    size: ...;
    decoration: ...;
  }
---------------------------------------------------------------------------------------------------
VARIABLES:
  $color: white;                define a variable, at the top of the page
  background: $color;           reference a variable
---------------------------------------------------------------------------------------------------
DATA TYPES:
  number:     8.11
  string:     "test"
  boolean:    true, false
  null:       empty value
---------------------------------------------------------------------------------------------------
LISTS:
  entry1 entry2;                      seperates by spaces
  entry1, entry2;                     seperated by commas
  "entry1 entry2" "entry3 entry4";    list of lists
  $border: 4px solid black;           example
---------------------------------------------------------------------------------------------------
MAPS:
  (key1: value1, key2: value2);       key-value pairs, values can be lists or maps
---------------------------------------------------------------------------------------------------
MIXINS:
  definition:                                   reuse blocks of code
    @mixin myMix($..., $...) {                  name with optional parameters
      ...;                                      css using parameters
    }
  --------------------
  call:
    @include myMix(..., ...);                   call with values for parameters
  --------------------
  example:
    @mixin box-shadow($x, $y, $blur, $c) {
      box-shadow: $x, $y, $blur, $c;
      -webkit-box-shadow: $x, $y, $blur, $c;
      -moz-box-shadow: $x, $y, $blur, $c;
      -ms-box-shadow: $x, $y, $blur, $c;
    }

    @include box-shadow(0px, 0px, 4px, #fff);
---------------------------------------------------------------------------------------------------
IF:
  @if condition {
    statement;
  }
  @else if condition {
    statement;
  }
  @else {
    statement;
  }
---------------------------------------------------------------------------------------------------
FOR:
  @for ... from ... through ... {}           iterate over a range of numbers

  @for $i from 1 through 10 {
    ...#{$i} {                               #{...} combine variable with text
      font-size: 10px * $i;                  use variable in calculation
    }
  }
---------------------------------------------------------------------------------------------------
EACH:
  list:
    @each ... in ..., ... {}                                iterate over a list

    example:
      @each $color in blue, red, green {
        .#{$color}-text {
          color: $color;
        }
      }
  --------------------
  map:
    @each ..., ... in ... {}                                iterate over a map

    example:
      $colors: (color1: blue, color2: red, color3: green);
      @each $key, $color in $colors {
        .#{$color}-text {
          color: $color;
        }
      }
---------------------------------------------------------------------------------------------------
WHILE:
  init
  @while ... {                    iterate until condition is met
    ...
    counter
  }
  --------------------
  example:
    #x: 1;
    @while $x < 13 {
      .col-#{$x} {
        width: 100%/12 * $x;
      }
      $x: $x + 1;
    }
---------------------------------------------------------------------------------------------------