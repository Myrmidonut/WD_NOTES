FILES:
  node file.js          run code from a file
---------------------------------------------------------------------------------------------------
SETUP:
  nvm install node      install latest version
  nvm install ...       install specific version
  nvm use ...           use specific version
---------------------------------------------------------------------------------------------------
NPM:
  basic:
    npm init                      create package.json
      -y                          with default values
    npm install --save ...        add packages
    node ...                      start server

  advanced:
    npmjs.com                     packages database

    npm help ...                  open help pages

    npm install                   load dependencies from package.json
    npm install ...               install package/s
    npm install --save ...        install package/s as dependency in package.json
    npm install -g ...            install package/s globally

    npm init                      create package.json
    npm init --scope=...          with username
      README.md with description
      repository

    npm ls                        show installed dependencies

    npm test                      run test scripts

    npm publish                   send to registry, requires current version, sets "latest" tag
    npm view ...                  view details for a published package
    npm version                   update version number, commit to git, major.minor.patch
    npm dist-tag ls               show all versions
    npm dist-tag add name@version tag    create new tag with version and name of package
    npm dist-tag rm name tag      remove tag from name
    npm outdated                  check for updated packages
    npm update                    update all packages
    npm uninstall                 remove dependencies
    npm uninstall --save          also remove from package.json
      npm rm                      short

    npm whoami
    npm adduser
---------------------------------------------------------------------------------------------------
PACKAGE.JSON:
  "name": "...",
  "author": "...",
  "version": "...",             semantic version: major.minor.patch, minor and patch dont break
  "license": "...",             MIT, BSD, ...
  "description": "...",
  "keywords": ["...", "..."],
  "main": "server.js",          entry point
  "scripts": {                  build and test scripts from modules
    "build": "node app.js"      build command
    "test": "node test.js"      example test
  },
  "repository": {
    "type": "...",              git
    "url": "..."                URL to project
  },
  "dependecies": {              used modules
    "...": "...",               "~..." latest patch, "^..." latest minor
    "...": "..."
  },
  "engines": {
    "...": "..."
  }
---------------------------------------------------------------------------------------------------
README.MD
  README.md contains written description of the project
---------------------------------------------------------------------------------------------------
INCLUDE:
  const ... = require("...");       include a package
---------------------------------------------------------------------------------------------------
PACKAGES:
  build in:
    http                  server
    file system           files
    path                  directories
    assertion testing     code tests
  
  nodemon                 restarts server on file changes
  
  npm-check-updates       update package.json to latest versions
    ncu -u                update
    ncu --upgradeAll      update and changes package.json entries
    npm install

  express                 routing
  ejs                     inserting JS into HTML
  body-parser             handling form POST
  request                 API
  mongoose                MongoDB
  mongodb                 MongoDB
  dns                     DNS lookup, dns.lookup(url, function(err, data) {});
  multer                  handling files from forms
  helmet                  site security
  node-fetch              enable fetch
  dotenv                  .env file
  express-sanitizer       remove <script> from strings
  passport                user authentication
  connect-flash           show temporary status messages
---------------------------------------------------------------------------------------------------
BASIC START:
  app.js:
    const http = require('http');                           import module

    const hostname = '127.0.0.1';                           set hostname (localhost)
    const port = 3000;                                      set port

    const server = http.createServer((req, res) => {        create http server
      res.statusCode = 200;                                 response
      res.setHeader('Content-Type', 'text/plain');          response
      res.end('Hello World\n');                             response
    });

    server.listen(port, hostname, () => {                   assign hostname and port
      console.log('Server running at http://'+ hostname + ':' + port + '/');
    });

  node app.js                                               start server at http://127.0.0.1:3000/
---------------------------------------------------------------------------------------------------
process.argv[]                    arguments array

let fs = require("fs");           enable file I/O
let ... = fs.readFileSync(...);   (sync) read file
let ... = fs.readFile(...);       (async) read file