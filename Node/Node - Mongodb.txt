ODM:
  Object Data Mapper
---------------------------------------------------------------------------------------------------
INSTALL:
  npm install mongodb --save
---------------------------------------------------------------------------------------------------
USE:
  const MongoClient = require("mongodb").MongoClient;
  const URL = "..."                                       set URL
            = process.env.DB                              set DB="..." inside .env file
---------------------------------------------------------------------------------------------------
CONNECT:
  MongoClient.connect(URL, (err, db) => {         connect to database
    const collection = db.collection("...")       select collection by name
    ...                                           run mongodb commands
  });
---------------------------------------------------------------------------------------------------
CRUD:
  Create Read Update Delete
---------------------------------------------------------------------------------------------------
CREATE:
  collection
    .insert({...: ..., ...: ...}, callback)           create
      result.ops[0]                                   return

    .insertOne({...})
    .insertMany([{a : 1}, {a : 2}], callback)
---------------------------------------------------------------------------------------------------
READ - FIND:
  collection
    .find().toArray(callback))                        find all entries
    .find({'a': 3}).toArray(callback)                 find first matching entry
    .find({_id: ObjectId("...")}).toArray(callback)   find by id
    .find({...: ...}, {...: 0/1}).toArray(callback))  find entries with filter
      result[0]                                       result

    .find()
    .sort({...: ...})                                 time: -1 for descending
    .limit(...)
    .toArray()

    .findOne({...}, callback)                         find first match
      result                                          result
---------------------------------------------------------------------------------------------------
UPDATE:
  collection
    .update({...}, {...}, callback)                         update, return number of updated documents
           ({...}, {$push: {...: ...}}, callback)           push fields to array
           ({...}, {$set: {...: ...}}, callback)            overwrite fields
  
    .findOneAndUpdate({...}, {...}, callback)               update
      upsert: true                                          create document if not found
      returnOriginal: false                                 return updated document
      result.value === {...} or null                        result

    .updateOne
    .updateMany
---------------------------------------------------------------------------------------------------
DELETE:
  collection
    .remove(callback)                                 delete all entries in collection
    .remove({...}, {...}, callback)                   delete one entry
  
    .findOneAndDelete({...}, callback)     
    .deleteOne({ a : 3 }, function(err, result) {})   
---------------------------------------------------------------------------------------------------
INDEX:
  const indexCollection = function(db, callback) {      
    db.collection('documents').createIndex(
      { "a": 1 },
        null,
        function(err, results) {
          console.log(results);
          callback();
      }
    );
  };
---------------------------------------------------------------------------------------------------