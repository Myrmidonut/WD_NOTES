USE:
  var express = require("express");
  var app = express();
---------------------------------------------------------------------------------------------------
STYLES:
  app.use(express.static("public"));                  search /public folder for stylesheets
---------------------------------------------------------------------------------------------------
FOLDERS:
  /public/                                css, images
  /views/                                 html
  /middlewares/                           middleware
  /models/                                database access
  /controllers/                           routes
  /routes/                                routes

  process.cwd()                           directory of the node process
  __dirname                               directory of the script file
---------------------------------------------------------------------------------------------------
INCLUDE:
  include ...                             include HMTL code from another file
---------------------------------------------------------------------------------------------------
SETUP:
  server.js:                                                    default setup
    const express = require("express");
    const apiRoutes = require('./routes/api.js');               enable /routes/api.js with app.route
    app.use(express.static("public"));                          search in /public/ for css, script
    app.route("/")                                              initial route
      .get((req, res) => {
        res.sendFile(process.cwd() + '/views/index.html')
      })
    apiRoutes(app);                                             load routes file
    app.listen(process.env.PORT || 3000, () => {                start server
      console.log("Listening on port " + process.env.PORT);
    }
    module.exports = app;
---------------------------------------------------------------------------------------------------
ROUTES:
  order of routes matters
  call function when route is matched

  ROUTE:
    app.route("...")                                              multiple routes to same URL
      .get(function(req,res) {...})
      .post(function(req,res) {...})
      ...

  GET:
    app.get("...", function(req, res) {                           route with request and response
      res.send("...");                                            output
    });

    app.get("*", ...                                              fallback route

  POST:
    app.post("...", function(req, res) {
      res.send("...");
    });

  USE:
    app.use()                                                     runs on all requests

  LISTEN:
    app.listen(process.env.PORT, process.env.IP, function() {     server
      console.log("Server has started.");
    });
---------------------------------------------------------------------------------------------------
REQUEST:
  req.headers                               header data of request object
  req.params                                wildcard in the url /:...
  req.body                                  form fields with GET
  req.query                                 form fields with POST, queries in the url
    ?first=firstname&last=lastname
      req.query.first
      req.query.last

  req.method
  req.path
  req.ip
---------------------------------------------------------------------------------------------------
RESPONSE:
  res.send("...")                           send text, string, object, array
  res.sendFile(...)                         send a file with absolute path
  res.json(...)                             send a json object
  res.redirect("...")                       send to website

  let absolutePath = __dirname + "relativePath/file.ext"          create absolute path
---------------------------------------------------------------------------------------------------
ROUTES PARAMETERS:
  app.get("/.../:test", function(req, res) {     :test is a wildcard
    var ... = req.params.test;
  });

  can use regexp for routes:
    ?, +, *, ()
    -, . are literal
---------------------------------------------------------------------------------------------------
MODELS/EXPORT:
  /models folder:
    campground.js:
      var mongoose = require("mongoose");

      var campgroundSchema = new mongoose.Schema({
        name: String,
        image: String,
        description: String
      });

      module.exports = mongoose.model("Campground", campgroundSchema);

  app.js:
    var Campground = require("./models/campground");                        campgrounds.js file
---------------------------------------------------------------------------------------------------
REDIRECT:
  res.redirect("...");                    load route
---------------------------------------------------------------------------------------------------
RENDER:
  res.render("...");                        display a file from /views folder
  res.render("...", {name: inputData});     usually name = inputData
---------------------------------------------------------------------------------------------------
MIDDLEWARE:
  app.METHOD(path, middlewareFunction)      optional path

  express.static(path)                      setting up folders for stylesheets, scripts, images

  middlewareFunction:
    request object, response object, next function in the cycle

    app.use(function(req, res, next) {
      ...;
      next();
    })
---------------------------------------------------------------------------------------------------
ENV:
  process.env                        global node object

  strings
  uppercase
  underscores
  no spaces around =