SQL:
  Structured Query Language
  used in most relational databases
---------------------------------------------------------------------------------------------------
RELATIONAL VS NON-RELATIONAL:
  relational database:
    SQL
    stores relationships between data
    creates smaller tables for data groups

  non-relational database:
    NoSQL
    MongoDB
    stores data in documents
    creates objects
---------------------------------------------------------------------------------------------------
STRUCTURE:
  database
    schema
      table
        row         set of related data
          column    data for a particular attribute
---------------------------------------------------------------------------------------------------
RDBMS:
  relational database management system

  SQLite          single user, file based
  MS SQL
  PostgreSQL
  MySQL           multi user, server based, open source
---------------------------------------------------------------------------------------------------
GUIS:
  Sequel Pro (Mac)
  Querious (Mac)
  Navicat
  MySQL Workbench (free)
  phpMyAdmin (free)
  Adminer (free)
---------------------------------------------------------------------------------------------------
CONSOLE COMMANDS:
  mysql -u root -p                    open interface

  create database ...;                create a database
  use ...;                            open database
  show databases;                     list databases

  show tables;                        list tables in database
  describe ...;                       list columns in table

  create table ... (...);             create table
  drop table ...;                     delete table
  insert into ... (...);              create row for table
  select * from ...;                  show all rows for table
---------------------------------------------------------------------------------------------------
CREATE:
  CREATE TABLE ... (id INTEGER PRIMARY KEY, ... TEXT);    create table, (col_name type modifier)
    id INTEGER PRIMARY KEY AUTO_INCREMENT                 unique number for entries
    ... TEXT NOT NULL                                     entries need a value

    integer
    string
    text            longer than string
    real
    boolean
    timestamp

INSERT:
  INSERT INTO ... VALUES (..., ..., ...);           insert data
  INSERT INTO ... (..., ...) VALUES (..., ...);     insert data for named columns

QUERY:
  SELECT * FROM ...;                  select all
    WHERE ...;                        condition
    WHERE ... AND ...;                multiple conditions
    WHERE ... IN (..., ...);          in
    WHERE NOT ...;                    not

  SELECT ..., ... FROM ...;           select specific columns
    ODER BY ...;                      order result
    
  SELECT ..., CASE WHEN ... THEN ... ELSE ... END ... FROM ...;

AGGREGATE:
  SELECT SUM(...) FROM ...;
         MAX(...)

GROUP:
  SELECT ..., COUNT(*) FROM ... GROUP BY ...;

JOIN:
  
UPDATE:
  UPDATE ... SET ... WHERE ...;
  DELETE FROM ... WHERE ...;

DELETE:
  DELETE ... FROM ...;
---------------------------------------------------------------------------------------------------
EXAMPLE:
  CREATE TABLE groceries (id INTEGER PRIMARY KEY, name TEXT, quantity INTEGER, aisle INTEGER);

  INSERT INTO groceries VALUES (1, "Bananas", 4, 7);
  INSERT INTO groceries VALUES (2, "Peanut Butter", 1, 2);
  INSERT INTO groceries VALUES (3, "Dark cocoloate bars", 2, 2);

  SELECT * FROM groceries WHERE aisle > 5 ORDER BY aisle;

  SELECT aisle, SUM(quantity) FROM groceries GROUP BY aisle;
---------------------------------------------------------------------------------------------------
EXAMPLE:
  SELECT 
    year(created_at) year,
    monthname(created_at) month,
    count(*) published
  from posts
  group by year, month
  order by min(created_at) desc