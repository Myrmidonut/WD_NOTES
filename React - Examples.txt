EXAMPLE:
  single page application:
    <div id="app"></div>

    function Person(props) {
      return (
        <div className="person">
          <h1>{props.name}</h1>
          <p>Your age: {props.age}</p>
        </div>
      );
    }

    var app = (
      <div>
        <Person name="Max" age="28" />
        <Person name="Manu" age="29" />
      </div>
    );

    ReactDOM.render(app, document.querySelector("#app"));
---------------------------------------------------------------------------------------------------
EXAMPLE:
  class CampSite extends React.Component {
    constructor(props) {
      super(props);
    }

    render() {
      return (
        <div>
          <Camper/>
        </div>
      );
    }
  };

  function Camper(props) {
    return (
      <p>{props.name}</p>
    )
  }

  Camper.defaultProps = {
    name: "CamperBot"
  }

  Camper.propTypes = {
    name: PropTypes.string.isRequired
  }
---------------------------------------------------------------------------------------------------
EXAMPLE:
  class Counter extends React.Component {
    constructor(props) {
      super(props);

      this.state = {
        count: 0
      };

      this.increment = this.increment.bind(this);
      this.decrement = this.decrement.bind(this);
      this.reset = this.reset.bind(this);
    }

    increment() {
      this.setState({
        count: this.state.count + 1
      });
    };
    
    decrement() {
      this.setState({
        count: this.state.count - 1
      });
    };

    reset() {
      this.setState({
        count: 0
      });
    };

    render() {
      return (
        <div>
          <button className='inc' onClick={this.increment}>Increment!</button>
          <button className='dec' onClick={this.decrement}>Decrement!</button>
          <button className='reset' onClick={this.reset}>Reset</button>
          <h1>Current Count: {this.state.count}</h1>
        </div>
      );
    }
  };
---------------------------------------------------------------------------------------------------
EXAMPLE:
  class ControlledInput extends React.Component {
    constructor(props) {
      super(props);

      this.state = {
        input: ''
      };

      this.handleChange = this.handleChange.bind(this);
    }

    handleChange(event) {
      this.setState({
        input: event.target.value
      })
    }

    render() {
      return (
        <div>
          <input value={this.state.input} onChange={this.handleChange} />
          <h4>Controlled Input:</h4>
          <p>{this.state.input}</p>
        </div>
      );
    }
  };
---------------------------------------------------------------------------------------------------
EXAMPLE:
  class MyForm extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        input: '',
        submit: ''
      };
      this.handleChange = this.handleChange.bind(this);
      this.handleSubmit = this.handleSubmit.bind(this);
    }

    handleChange(event) {
      this.setState({
        input: event.target.value
      });
    }

    handleSubmit(event) {
      this.setState({
        submit: this.state.input
      });
    }

    render() {
      return (
        <div>
          <form onSubmit={this.handleSubmit}>
            <input value={this.state.input} onChange={this.handleChange} />
            <button type='submit'>Submit!</button>
          </form>
          <h1>{this.state.submit}</h1>
        </div>
      );
    }
  };
---------------------------------------------------------------------------------------------------
EXAMPLE:
  class MyApp extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        name: 'CamperBot'
      }
    }
    render() {
      return (
         <div>
           <Navbar name={this.state.name} />
         </div>
      );
    }
  };

  class Navbar extends React.Component {
    constructor(props) {
      super(props);
    }
    render() {
      return (
      <div>
        <h1>Hello, my name is: {this.props.name}</h1>
      </div>
      );
    }
  };
---------------------------------------------------------------------------------------------------
EXAMPLE:
  const inputStyle = {
    width: 235,
    margin: 5
  }

  class MagicEightBall extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        userInput: '',
        randomIndex: ''
      }
      this.ask = this.ask.bind(this);
      this.handleChange = this.handleChange.bind(this);
    }
    ask() {
      if (this.state.userInput) {
        this.setState({
          randomIndex: Math.floor(Math.random() * 20),
          userInput: ''
        });
      }
    }
    handleChange(event) {
      this.setState({
        userInput: event.target.value
      });
    }
    render() {
      const possibleAnswers = [
        'It is certain',
        'It is decidedly so',
        'Without a doubt', 
        'Yes, definitely',
        'You may rely on it',
        'As I see it, yes',
        'Outlook good',
        'Yes',
        'Signs point to yes',
        'Reply hazy try again',
        'Ask again later',
        'Better not tell you now',
        'Cannot predict now',
        'Concentrate and ask again',
        'Don\'t count on it', 
        'My reply is no',
        'My sources say no',
        'Most likely',
        'Outlook not so good',
        'Very doubtful'
      ];
      const answer = possibleAnswers[this.state.randomIndex]; // << change code here
      return (
        <div>
          <input
            type="text"
            value={this.state.userInput}
            onChange={this.handleChange}
            style={inputStyle} /><br />
          <button onClick={this.ask}>
            Ask the Magic Eight Ball!
          </button><br />
          <h3>Answer:</h3>
          <p>
            { /* change code below this line */ }
            {answer}
            { /* change code above this line */ }
          </p>
        </div>
      );
    }
  };
---------------------------------------------------------------------------------------------------
EXAMPLE:
  class Results extends React.Component {
    constructor(props) {
      super(props);
    }
    render() {
      return (
        <h1>
          {this.props.fiftyFifty ? "You win!" : "You lose!"}
        </h1>
      )
    };
  };

  class GameOfChance extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        counter: 1
      }
      this.handleClick = this.handleClick.bind(this);
    }
    handleClick() {
      this.setState({
        counter: this.state.counter + 1
      });
    }
    render() {
      let expression = Math.random()> 0.5;
      return (
        <div>
          <button onClick={this.handleClick}>Play Again</button>
          <Results fiftyFifty = {this.expression}/>
          <p>{'Turn: ' + this.state.counter}</p>
        </div>
      );
    }
  };
---------------------------------------------------------------------------------------------------
EXAMPLE:
  const textAreaStyles = {
    width: 235,
    margin: 5
  };

  class MyToDoList extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        userInput: "",
        toDoList: []
      }
      this.handleSubmit = this.handleSubmit.bind(this);
      this.handleChange = this.handleChange.bind(this);
    }

    handleSubmit() {
      const itemsArray = this.state.userInput.split(',');
      this.setState({
        toDoList: itemsArray
      });
    }

    handleChange(e) {
      this.setState({
        userInput: e.target.value
      });
    }

    render() {
      const items = this.state.toDoList.map(function(e) {
        return <li>{e}</li>;
      });

      return (
        <div>

          <textarea
            onChange={this.handleChange}
            value={this.state.userInput}
            style={textAreaStyles}
            placeholder="Separate Items With Commas" /><br />

          <button onClick={this.handleSubmit}>Create List</button>

          <h1>My "To Do" List:</h1>

          <ul>
            {items}
          </ul>

        </div>
      );
    }
  };
---------------------------------------------------------------------------------------------------
EXAMPLE:
  class DisplayMessages extends React.Component {
    constructor(props) {
      super(props);

      this.state = {
        input: '',
        messages: []
      }

      this.handleChange = this.handleChange.bind(this);
      this.submitMessage = this.submitMessage.bind(this);
    }

    handleChange(event) {
      this.setState({
        input: event.target.value
      })
    }

    submitMessage() {
      let newMessages = [...this.state.messages, this.state.input];
      this.setState({
        input: "",
        messages: newMessages
      })
    }

    render() {
      return (
        <div>
          <h2>Type in a new Message:</h2>
          <input value={this.state.input} onChange={this.handleChange} />
          <button type="submit" onClick={this.submitMessage}>Submit</button>
          <ul>
            {
              this.state.messages.map(function(e) {
                return <li>{e}</li>
              })
            }
          </ul>
        </div>
      );
    }
  };
---------------------------------------------------------------------------------------------------