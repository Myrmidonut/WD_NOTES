OVERVIEW:
  one endpoint
  sends flexible data back for a request

  schema:
    describes data types
    variables
    functions used in resolvers

  operation type:
    query             get data
    mutation          post data
    subscriptions     realtime data
---------------------------------------------------------------------------------------------------
QUERY:
  {
    query {             operation type
      user {            endpoint
        name            requested fields
        age
      }
    }
  }
---------------------------------------------------------------------------------------------------
GRAPHIQL:
  IDE to interact with a GraphQL API directly

  /graphql                                default for testing the API
---------------------------------------------------------------------------------------------------
DATA TYPES:
  String
  Int
  Float
  Boolean
  ID

  [String]                      list of strings

  can be null
  ...! cannot be null
---------------------------------------------------------------------------------------------------
FRONTEND:
  variable:
    {
      query: `{
        hello
      }
    }

    body: JSON.stringify({                  fetch body
      query: "{ hello }"
    })
  --------------------
  function:
    const first = 1;
    const second = 2;

    const query = `query MyFunc($first: Int!, $second: Int) {
      myFunc(arg1: $first, arg2: $second)
    }`

    body: JSON.stringify({                  fetch body
      query,
      variables: { dice, sides },
    })
  --------------------
  example:
    fetch('/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
      },

      body: JSON.stringify({                query
        query: `{
          hello
        }`
      })

      body: JSON.stringify({                mutation
        query: `mutation {
          hello(
            name: "..."
            age: ...
          )
        }`
      })
      
    })
    .then(r => r.json())
    .then(data => console.log('data returned:', data));
---------------------------------------------------------------------------------------------------