FLEX:
  Flex-Container for a page with top, main and bottom:
    #page {
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

  Flex-Container for main:
    #main {
        height: 500px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }




-----
INLINE CSS:
  <body>
    <tag style="color:red;"></tag>
  </body>
-----
INTERNAL CSS:
  <head>
    <style type="text/css">
      .name1 {properties;}
      #name2 {properties;}
    </style>
  </head>
-----
EXTERNAL CSS:
  <head>
    <link rel="stylesheet" type="text/css" href="name.css">
  </head>
-----
@-RULES:
  @import "stlyes2.css";
  @charset

  @media
  @document

  @font-face
-----
NORMALIZE:
  same layout on all browsers
-----
SPECIFICITY:
  later styles overwrite previous ones
  more specific styles overwrite others

  !important > inline > id > class, attribute > tag
               1000     100  10                 1

  p {color: blue !important;}             overwrites everything
-----
  selector {                              declaration
    property: value;
  }
-----
COMMENT:
  /*                                      comment, over multiple lines
    comment
  */        
-----
  10%                                     percentage of parent
  10px                                    absolute
  2.0em                                   2.0 times the size of the parent element
    1em = 16px                            default, unless a different font size is set in the parent element
  2.0rem                                  2.0 times the size of the root element
-----
CLASS / ID:
  .name {}                                class selector, multiple occurences
    <... class="name1 name2">

  #name {}                                id selector, once per page
    <... id="name1 name2">

  * {}                                    star, whole page, "CSS Reset"

  tag1.class1 {}                          only tag1 with class1
  tag1, tag2 {}                           multiple selectors
  tag1 tag2 {}                            child selector, only tag2 inside tag1
  tag1 > tag2 {}                          child selector, only tag2 inside tag1, only first level deep
  tag1 + tag2 {}                          adjacent selector, tag2 that comes after tag1

  tag[attribute] {}                       attribute selector, no blanks before []
  [attribute] {}                          tag not required
    a[href="..."]
    input[type="checkbox"]:checked

  tag:first-of-type {}                    only the first
  tag:nth-of-type(n) {}                   only every n-th in every block
  tag:nth-child(2n) {}                    every second one
  tag:first-letter {}                     first letter
-----
BOX MODEL:
   _____________________________
  |margin ______________________          between border and next element
  |      |border _______________
  |      |      |padding _______          between content and border
  |      |      |       |content

  * {                                     show outlines around the boxes
     outline: 1px solid red !important;
  }
-----
BOX:
  left: 100px;                                  100px margin on the left side of the object
  top: 100px;                                   100px margin at the top

  margin: 100px;                                border all around the object
  margin: 100px 50px;                           top and bottom, left and right
  margin: 100px 50px 20px 10px                  top, right, bottom, left
  margin-left: 150px;                           one specific margin

  margin: auto;                                 centers the element in its parent element, needs a width
  margin: 0 auto;                               top/bottom = 0, left/right = auto

  left/right margins dont overlap, top and bottom margins overlap

  border: 1px solid black;                      width, style, color
  border-width: ...
  border-color: ...
  border-style: ridge; solid; dotted; dashed;   individual style, top, right, bottom, left
  border-left-color: ...

  border-radius: 50px                           creates a circle: radius = width/2 = 50%

  padding: 5px;                                 area between content and border
  padding: 1px 2px;                             top and bottom, left and right
  padding: 1px 2px 3px 4px;                     top, right, bottom, left
  padding-top: 5px;                         

  overflow: hidden; scroll; visible;            behaviour when windows are smaller than the element
    children inherit parent behaviour

  box-sizing:
    content-box                                 default, width/height without padding, border
    border-box                                  width/height includes padding and border

  size is width + margin + padding
-----
  img:last-of-type {
    margin-right: 0;
  }
-----
SIZE:
  width: 50%; 100px;                  width
  min-width: 300px;
  max-width: 700px; 

  height: 100px;                      height
  min-height: 100px;
  max-height: 200px;
-----
POSITION:
  float;                              removes the default element behaviour like new line, margin, etc.
  float: left; right;                 moves the element to this side, requires width
  
  clear: left; right; both; none;     this side of an element will not touch another element
  
  position: relative;                 move position, negative numbers possible
    top: 10px;                        adjust position after setting relative
  position: absolute;                 other elements will ignore this position
  position: fixed;                    always stays fixed on the screen when scrolling
  position: static;                   default
  
  z-index: 1; 2;                      overlapping order
-----
DISPLAY:
  display: block;                     takes the full width of the parent
    <h1> <p> <ul>
  display: inline;                    not full parent-width, but width is disabled
    <img> <a>
  display: inline-block;              not full parent-width, with access to width
  display: none;                      removes the element completely

  display: flex;                      aligns elements horizontally
    flex-wrap: wrap;                  adds linebreak to flex
    justify-content: center;          centers flex elements
  
  visibility: hidden; visible;        hides the element, still takes up space
  
  opacity: 0; 1;                      transparancy, 0-1
-----
CENTERING:
  text-align: center;                 text

  display: block;                     image
  margin: auto;

  margin: auto;                       div, block element
  width: 50%;
-----
GRID CONTAINER:
  takes up whole parent-width without a set width
  
  <div class="grid">
    <div class="element">...</div>
  </div>
  
  .grid { ... } :
  display: grid; inline-grid;         grid with default one column, everything evenly spaced
  
  grid-template-columns: 20% 50px;    number and size of columns
  grid-template-rows: 10% 40px;       number and size of rows
  grid-template: 10px / 20%;          rows / columns in one line
  grid-template: 1fr 10px / 1fr 10px; fractions: dividing leftover space after px
    repeat(2, 10px 20px) / ...;       2x 10px 20px rows / ...columns
    minmax(20px, 80px)                variable size

  grid-row-gap: 10px;                 space between rows
  grid-column-gap: 20px;              space between columns
  grid-gap: 10px 20px;                combined space between rows and columns
-----
GRID ITEMS:
  .element { ... } :
  grid-row-start: 1;                  element starts in row 1
  grid-row-end: 3;                    and ends in row 2, not 3!
  grid-row: 1 / 3;                    row start and end in one line
  grid-row: 1 / span 2;               starts in 1 and covers 2 rows

  grid-column...                      same as for row

  grid-area: 2 / 3 / 4 / span 5;      row start / column start / row end / column end
-----
BACKGROUND:
  background: black;                  background-color: black;
  background: linear-gradient(        gradient, from top left to bottom right, from black to white
    to bottom right, black, white); 
  background: url("...");             background-image: url("..."); image will be tiled
  background-repeat: no-repeat;       prevents tiling
  background-size: cover;             stretches to window
  background-position: center         
-----
COLORS:
  color: #FF0000; 
         #RedRedGreenGreenBlueBlue;
         #FF0000                      red
         #00FF00                      green
         #0000FF                      blue
         #000000                      black
         #FFFFFF                      white
  color: rgb(0, 255, 0);              RGB
  color: rgba(0, 0, 0, 0.0-1.0);      RGBA, transperancy: alpha channel 0.0 - 1.0
  color: hsl(120, 60%, 70%);          HSL, hue in 0-360 degrees, saturation, lightness
  color: hsla(34, 100%, 50%, 0.1);    HSLA, transperancy: alpha channel 0.0 - 1.0
-----
FONT:
  max 2 - 3 fonts per page

  font-family: "Arial", "Times", serif;   font with fallback fonts, serif, sans-serif

  <link href="..." rel="stylesheet">  add a google font in the HTML page
    font-family: ...
  alternative: @font-face ... at the top of the stylesheet, copied from google-font-link   

  color: black;
  font-size: 200%;
  font-weight: bold;                  light (300), normal (400), bold (700)
  font-style: italic;                 normal, italic, oblique
  
  text-decoration: none;              none, overline, underline, line-through
  text-transform: uppercase;          uppercase, lowercase, capitalize

  text-indent: 50px;                  indent first line
  letter-spacing: 3px;                space between letters, default: 0.25em
  line-height: 0.8; 12px;             height of lines, font-size + leading, unitless prefered
  direction: rtl;
  word-spacing: 10px;                 space between words

  text-align: left; center; right;    aligns inside the container
  text-align: justify;                blocked text   
-----
LINKS:
  a:hover {}        
  a:visited {}
  a:link {}
  a:active {}                         current website
  tag:first-letter {}
-----
MOUSEOVER:
  tag:focus
  tag:hover
-----
TRANSITION:
  transition: all 0.3s;               transition effect on all elements of 0.3 seconds, background, etc.
  -webkit-transition: all 0.3s;       required for Safari
  -moz-transition: all 0.3s;          required for Firefox
-----
SHADOW:
  text-shadow: 1px 1px 1px black;               horizontal offset, vertical offset, blur radius, color
                                                negative values: to the left and top
  text-shadow: 0px 4px 3px rgba(0,0,0,0.4),     slight grey shadow
         0px 8px 13px rgba(0,0,0,0.1),
         0px 18px 23px rgba(0,0,0,0.1);
  box-shadow: 4px 4px 10px gray;    
-----
OUTLINE:
  outline: none                       removes borders on buttons when clicked
-----
LISTS:
  list-style: none:                   removes bulletpoints
  list-style-type: none               "
  float: left;                        in one line
  margin-right: 10px;                 with a space