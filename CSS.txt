STYLE:
  inline:
    <body>
      <tag style="color:red;"></tag>
    </body>

  internal:
    <head>
      <style type="text/css">
        .name1 {properties;}
        #name2 {properties;}
      </style>
    </head>

  external:
    <head>
      <link rel="stylesheet" href="name.css">     type="text/css" not necessary
    </head>
---------------------------------------------------------------------------------------------------
@-RULES:                                      top of the file
  metadata:
    @import "stlyes2.css";                    imports a .css file
    @charset

  conditional information, nested statements:
    @media                                    only if the device matches the rule
    @document                                 only if the page matches the rule
    @supports                                 only if the browser supports the rule

  descriptive information:
    @font-face

  example:
    @media screen and (max-width: 900px) {    on screens that are 900px or less use these rules
      ...
    }
---------------------------------------------------------------------------------------------------
SPECIFICITY:
  later styles overwrite previous ones
  more specific styles overwrite others
  all styles are first applied and then evaluated

  !important > inline > id > (pseudo-)class, attribute > (pseudo-)element
                1000    100               10                     1

  p {color: blue !important;}             overwrites everything

  ... {
  ...: inherit;                           same as its parent
  ...: initial;                           same as the browser default, else set to inherit
  ...: unset;                             reset to default, inherit or otherwise initial
  }
---------------------------------------------------------------------------------------------------
DECLARATION:
  selector {                              ruleset with declaration block
    property: value;                      declaration
  }
---------------------------------------------------------------------------------------------------
COMMENT:
  /*                                      comment, single or multiple lines
    comment
  */        
---------------------------------------------------------------------------------------------------
UNITS:
  ...%                                    percentage of parent
  ...px                                   absolute
  1.0em = 16px                            1.0 times the font-size of the parent element, default is 16px
  2.0rem                                  2.0 times the font-size of the root element
  1vw = 1% of viewport width
---------------------------------------------------------------------------------------------------
SELECTORS:
  simple:
    element {}                            element
    * {}                                  whole page, "CSS Reset"
    .name {}                              class, multiple occurences
    #name {}                              id, once per page

    .name1.name2 {}                       has both classes

  multiple:
    element1, element2 {}                 multiple elements

  combinator:
    element1 element2 {}                  descendant, element2 inside element1
    element1 > element2 {}                child, element2 inside element1, first level only
    element1 + element2 {}                adjacent, element2 that comes directly after element1
    element1 ~ element2 {}                sibling, element2 that comes after element1

  attribute:
    [attribute] {}                        attribute
    [attribute="value"] {}                attribute and value
    [attribute~="value"] {}               attribute and value out of a list of values
    [attribute|="value"]                  attribute and value or value-, language codes
    [attribute^="value"]                  attribute and value starts with value
    [attribute$="value"]                  attribute and value that ends with value
    [attribute*="value"]                  attribute and value that contains value

    element[attribute] {}                 element with attribute

  pseudo-class:
    element
      :link
      :visited {}
      :hover {}                           mouse over
      :active {}
      :focus {}                           mouse click

      :first-child {}                     first child element
      :first-of-type {}                   first element
      :last-of-type {}                    last element
      :nth-of-type(n) {}                  n-th element
      :nth-child(n) {}                    every n-th element in a group of siblings

      :lang

    element1 element2 
      :first-child {}                     first element2 inside element1
      :nth-child(n) {}                    n-th element2 inside element1
        odd                               equal to 2n
        even                              equal to 2n-1
        a formula like an+b, with a being the cycle size, n the counter and b the offset

  pseudo-element:
    element
      ::after {content: ...;}             content after the element
      ::before {content: ...;}            content before the element
      ::first-letter {}                   first letter
      ::first-line {}                     first line
      ::selection {}
      ::backdrop {}
---------------------------------------------------------------------------------------------------
BOX MODEL:
   _____________________________
  |margin ______________________          between border and next element
  |      |border _______________
  |      |      |padding _______          between content and border
  |      |      |       |content

  * {                                     show outlines around the boxes
     outline: 1px solid red !important;
  }
---------------------------------------------------------------------------------------------------
BOX:
  margin:
    left: 100px;                                  100px margin on the left side of the object
    top: 100px;                                   100px margin at the top

    margin: 100px;                                border all around the object
    margin: 100px 50px;                           top and bottom, left and right
    margin: 100px 50px 20px 10px                  top, right, bottom, left
    margin-left: 150px;                           one specific margin

    margin: auto;                                 centers the element in its parent element, needs a width
    margin: 0 auto;                               top/bottom = 0, left/right = auto

    margin collapsing:
      top/bottom margins overlap, left/right don't

    negative values allowed

  border:
    border: width style color;                    shorthand
    border-width: ...;
    border-style: ridge; solid; dotted; dashed;   individual style, top, right, bottom, left
    border-color: ...;
    border-left-color: ...;

    border-radius: 50px                           creates a circle: radius = width/2 = 50%
                   20px / 50px;                   elliptical corners
                   20px 10px 50px 0;              top-left -right bottom-right -left

  border image:
    border-image: url("...") 40 round;            shorthand
    border-image-source: url("...");              image for border
    border-image-slice: 40;                       image gets cut for corners and sides of the border
    border-image-repeat: stretch;                 sides are stretched
                         repeat;                  sides are repeated until filled
                         round;                   sides are repeated and stretched until filled
                         space;                   sides are repeated and spaced until filled

  padding:
    padding: 5px;                               area between content and border
    padding: 1px 2px;                           top and bottom, left and right
    padding: 1px 2px 3px 4px;                   top, right, bottom, left
    padding-top: 5px;                         

  overflow:                                     content bigger than box, needs block element with height
    auto;                                       hidden with scrollbars
    hidden;                                     hidden without scrollbars
    scroll;                                     hidden with scrollbars on both sides
    visible;                                    default, shown outside the box

    overflow-x: ...;
    overflow-y: ...;

  background-clip:                              color/image size
    border-box;                                 default, border + padding + content
    padding-box;                                padding + content
    content-box;                                content

  box-sizing:
    content-box                                 default, box-size = width/height + padding + border
    border-box                                  box-size = width/height

  outline:                                      on top of the box, around the border
    outline: width style color;                 shorthand
             none;                              no outline on buttons when clicked
---------------------------------------------------------------------------------------------------
SIZE:
  width: 50%; 100px;                  width of content
  min-width: 300px;
  max-width: 700px; 

  height: 100px;                      height of content
  min-height: 100px;
  max-height: 200px;

  resizing image:                     image will shrink if its width is bigger than parents min-width
    display: block;                   block
    margin: 0 auto;                   center
    max-width: 100%                   shrinking
---------------------------------------------------------------------------------------------------
BACKGROUND:
  background: color image repeat position;  shorthand
  background-color: black;                  color, default: transparent, set as fallback
  background-image: url("...");             image, image will be tiled
  background-repeat: no-repeat;             no tiling
                     repeat-x;              horizontal tiling
                     repeat-y;              vertical iling
  background-position: center;              horizontal position
                       20px 20px;           horizontal and vertical position
    px, em, %
    left, center, right
    top, center, bottom

  background: ..., ...;                     stack backgrounds, top to bottom

  background-size: cover;                   fills element, overflow
                   contain;                 fills element, no overflow
                   16px 16px;               stretches to size

  background-origin: border-box;            position, top left of border
                     padding-box;           default
                     content-box;           

  background-clip: border-box;              area, default
                   padding-box;
                   content-box;

  background: linear-gradient(              gradient, from top left to bottom right, from black to white
    to bottom right, black, white);
    to bottom, black, white 40%, black);    black, to white at 40% height, to black

  background: radial-gradient();

  background-attachment: scroll;            background scrolls with the page
                         fixed;             background will not scroll
                         local;             background scrolls with the element
---------------------------------------------------------------------------------------------------
COLORS:
  color: #FF0000; 
         #RedRedGreenGreenBlueBlue;
         #FF0000                      red
         #00FF00                      green
         #0000FF                      blue
         #000000                      black
         #FFFFFF                      white
  color: rgb(0, 255, 0);              RGB
  color: rgba(0, 0, 0, 0.0-1.0);      RGBA, transperancy: alpha channel 0.0 - 1.0
  color: hsl(120, 60%, 70%);          HSL, hue in 0-360 degrees, saturation, lightness
  color: hsla(34, 100%, 50%, 0.1);    HSLA, transperancy: alpha channel 0.0 - 1.0

  same values are grayscale, rgb(120,120,120)
---------------------------------------------------------------------------------------------------
FONTS:
  serif                                     Times New Roman, Georgia
  sans-serif                                Arial, Verdana
  monospace                                 Courier New, Lucida Console

  max 2 - 3 fonts per page

  web fonts:
    Google Fonts:
      <link href="..." rel="stylesheet">
    
    local font:
      @font-face {
        font-family: "...";
        src: url("...");
      }

  color: black;                             color

  font: style variant weight size family;   shorthand, size: font-size/line-height
  font-family: "Arial", serif;              font with fallback fonts, serif, sans-serif, monospace
  font-size: 200%;
  font-weight: bold;                        light (300), normal (400), bold (700)
  font-style: italic;                       normal, italic, oblique
  
  text-decoration: none;                    none, overline, underline, line-through
  text-transform: uppercase;                uppercase, lowercase, capitalize, full-width

  text-indent: 50px;                        indent first line
  letter-spacing: 3px;                      space between letters, default: 0.25em
  line-height: 0.8; 12px;                   height of lines, box / font-size = line-height
                                            1.5 - 2 recommended
  direction: rtl;
  word-spacing: 10px;                       space between words

  text-align: left; center; right;          aligns inside the container
              justify;                      spread out, blocked text
---------------------------------------------------------------------------------------------------
LISTS:
  ul / ol:
    list-style: type position image;  shorthand, default: disc none outside
    list-style-type: upper-roman;     type of bullet: none, square, circle, number, letter
    list-style-position: inside;      position of bullets, default: outside, inside
    list-style-image: url(...);       custom image for bullet, background: ...; prefered

  ol:
    start="..."                       starting number
    reversed                          reversed counting

  li:
    value="..."                       specific value
---------------------------------------------------------------------------------------------------
TABLES:
  table:
    table-layout: fixed;              columns are width of the headings, recommended
    width: 100%;                      resize to parent
    border-collapse: collapse;        no space between cell borders, recommended
                     seperate;
    border: ...;                      border around all, recommended

  caption:
    caption-side: bottom;             moves caption below the table

  keep it simple and flexible
  fixed table-layout with width on th
  use collapsed borders
  style thead, tbody and tfoot seperately
  zebra striping for rows
  align th and td
---------------------------------------------------------------------------------------------------
LINKS:
  a {}                                reset: outline: none; text-decoration: none;
  a:link {}
  a:visited {}
  a:focus {}                          selected with tab
  a:hover {}                          border-bottom instead of underline
  a:active {}                         while clicked down

  a[href*="http"] {                   using a custom image for external links
    background: url("...")            path to image
                no-repeat
                100%
                0;
    background-size: 16px 16px;       size of image
    padding-right: 19px;              images don't overlap with links
  }

  order has to be: link visited hover active
  keep the styling order, they build on each other
  stay close to the default behaviour
  only underline links
  make them react to hovered, focused and active
---------------------------------------------------------------------------------------------------
TRANSITIONS:
  transition: all 0.3s;               transition effect on all elements of 0.3 seconds, background, etc.
  -webkit-transition: all 0.3s;       required for Safari
  -moz-transition: all 0.3s;          required for Firefox
---------------------------------------------------------------------------------------------------
SHADOWS:
  text:
    text-shadow: 1px 1px 1px black;                   horizontal offset, vertical offset, blur radius, color
                                                      negative offset: to the left and top
    text-shadow: 0px 4px 3px rgba(0,0,0,0.4),         slight grey shadow
                 0px 8px 13px rgba(0,0,0,0.1),
                 0px 18px 23px rgba(0,0,0,0.1);

  box:
    box-shadow: 5px 5px 5px rgba(0,0,0,0.7);
                inset ...;                            shadow inside the box, offsets inverted 

  filter:
    filter: drop-shadow(5px 5px 1px rgba(0,0,0,0.7)); shadow that follows the exact shape
    not supported in older browsers
---------------------------------------------------------------------------------------------------
BLEND:
  background-blend-mode: multiply;    blend background image with color

  mix-blend-mode: multiply-mix;       blend background and content of elements
---------------------------------------------------------------------------------------------------
CLIP:
  text + background:                        background takes shape of text
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;

  not standard CSS
---------------------------------------------------------------------------------------------------
DISPLAY:
  display:
    block;                            stacking, stays as a block, width/height available
      <div>                           width of parent
      <hr>                            height of content
      <ol>                            in new line
      <ul>
      <li>
      <p>
      <table>
      <form>
      <h1>

    inline;                           flowing, will break, width/height not available
      <a>                             width of content
      <button>                        height of content
      <img>                           on same line
      <input>
      <label>
      <span> 

    inline-block;                     flowing, stays as a block, width/height available

    none;                             removes the element completely

    table;                            table layout without using a table

    flex;                             aligns elements evenly
    
    grid;                             aligns elements in a grid

  visibility: hidden; visible;        hides the element, still takes up space
  
  opacity: 0;                         transparancy, 0.0 - 1.0
---------------------------------------------------------------------------------------------------
FLOAT:
  float:          element on one side of its parent, next ones will wrap around it
    left;         left side of parent
    right;        right side of parent
    none;         default
    inherit;      same as parent

  clear:          stop an active float
    left;         left side
    right;        right side
    both;         both sides, recommended

  parent element requires a width
  careful with float order
  clear floats
---------------------------------------------------------------------------------------------------
POSITION:
  position:
    static;                 default
    relative;               elements is moved relative to its normal position, space stays open
    absolute;               element is moved relative to the context, space is removed
      positioning context:
        html                default
        parent              with position: relative;
    fixed;                  element is moved relative to the viewport, space is removed
    sticky;                 relative/fixed hybrid, experimental

  move the element away from this side:
    top: ...;
    bottom: ...;
    left: ...;
    right: ...;

  z-index:                  overlapping order
    auto; 0;                default, descending in source order
    1; -1;                  higher numbers on top
---------------------------------------------------------------------------------------------------
CSS TABLES:
  lay out elements as if they are inside a table

  form
    display: table;
  form div
    display: table-row;
  form label, form input
    display: table-cell;
  form p
    display: table-caption;
    caption-side: bottom;
---------------------------------------------------------------------------------------------------
FLEXBOX:
  flex container:                     horizontal main axis
    display: flex;                    enable flexbox
             inline-flex;             for inline elements

    flex-flow: direction wrap;        shorthand

    flex-direction: row;              main axis direction, default horizontal
                    row-reverse;      horizontal reversed      
                    column;           vertical
                    column-reverse;   vertical reversed

    flex-wrap: wrap;                  flex items behaviour, flow into new line
               nowrap;
               wrap-reverse;

    align-items: stretch;             position of items on cross-axis, default, stretched to container height or longest item
                 center;              centered on cross axis
                 flex-start;          start of cross axis
                 flex-end;            end of cross axis
                 start;
                 end;

    align-content: space-between;     space around main axis
                   space-around;
                   stretch;
                   center;
                   flex-start;
                   flex-end;

    justify-content: flex-start;      position of items on main axis, default, start       
                     flex-end;        end
                     start;
                     end;
                     center;          center
                     space-around;    even distribution with extra space
                     space-between;   even distribution

  flex item:                          vertical cross axis
    flex: grow shrink basis;          shorthand, prefered
    flex-grow: ...;                   amount of slots an item occupies, unitless
    flex-shrink: ...;                 overflowing behaviour, unitless
    flex-basis: ...;                  width of an item
                auto;                 uses set width

    align-self: stretch;              position of item on cross-axis
                center;
                start;
                end;

    order: 0;                         order of items, default
           -1;
           1;
---------------------------------------------------------------------------------------------------
GRID:
  colums, rows, gutter between

  use percentages

  px to % conversion:
  column width px / total width px = column width %
  gutter width px / total width px = gutter width %















ALT:


---------------------------------------------------------------------------------------------------
CENTERING:
  text-align: center;                 text

  display: block;                     image
  margin: auto;

  margin: auto;                       div, block element
  width: 50%;
---------------------------------------------------------------------------------------------------






GRID CONTAINER:
  takes up whole parent-width without a set width
  
  <div class="grid">
    <div class="element">...</div>
  </div>
  
  .grid { ... } :
  display: grid; inline-grid;         grid with default one column, everything evenly spaced
  
  grid-template-columns: 20% 50px;    number and size of columns
  grid-template-rows: 10% 40px;       number and size of rows
  grid-template: 10px / 20%;          rows / columns in one line
  grid-template: 1fr 10px / 1fr 10px; fractions: dividing leftover space after px
    repeat(2, 10px 20px) / ...;       2x 10px 20px rows / ...columns
    minmax(20px, 80px)                variable size

  grid-row-gap: 10px;                 space between rows
  grid-column-gap: 20px;              space between columns
  grid-gap: 10px 20px;                combined space between rows and columns
---------------------------------------------------------------------------------------------------
GRID ITEMS:
  .element { ... } :
  grid-row-start: 1;                  element starts in row 1
  grid-row-end: 3;                    and ends in row 2, not 3!
  grid-row: 1 / 3;                    row start and end in one line
  grid-row: 1 / span 2;               starts in 1 and covers 2 rows

  grid-column...                      same as for row

  grid-area: 2 / 3 / 4 / span 5;      row start / column start / row end / column end
---------------------------------------------------------------------------------------------------
FLEX:
  Flex-Container for a page with top, main and bottom:
    #page {
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

  Flex-Container for main:
    #main {
        height: 500px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }